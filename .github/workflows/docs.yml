name: Documentation

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'src/**/*.ts'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [main]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'src/**/*.ts'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-docs:
    name: Lint Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install markdownlint
        run: npm install -g markdownlint-cli

      - name: Lint Markdown files
        run: |
          # Create markdownlint config
          cat > .markdownlint.json << 'EOF'
          {
            "MD013": { "line_length": 120 },
            "MD033": false,
            "MD041": false
          }
          EOF
          
          # Lint all markdown files
          markdownlint "**/*.md" --ignore node_modules --ignore .bun

      - name: Check for broken links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'yes'
          config-file: '.github/markdown-link-check.json'

  generate-api-docs:
    name: Generate API Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-bun

      - name: Install TypeDoc
        run: bun add -g typedoc

      - name: Generate API documentation
        run: |
          # Create TypeDoc config
          cat > typedoc.json << 'EOF'
          {
            "entryPoints": ["src/index.ts"],
            "out": "docs/api",
            "theme": "default",
            "includeVersion": true,
            "excludePrivate": true,
            "excludeProtected": true,
            "excludeExternals": true,
            "readme": "README.md",
            "name": "Mocha Stats Library",
            "tsconfig": "tsconfig.json"
          }
          EOF
          
          # Generate docs
          typedoc

      - name: Upload API docs
        uses: actions/upload-artifact@v4
        with:
          name: api-documentation
          path: docs/api/
          retention-days: 30

  build-docs:
    name: Build Documentation Site
    runs-on: ubuntu-latest
    needs: [generate-api-docs]
    steps:
      - uses: actions/checkout@v4

      - name: Download API docs
        uses: actions/download-artifact@v4
        with:
          name: api-documentation
          path: docs/api/

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Check for docs site
        id: docs_check
        run: |
          if [ -f "docs/package.json" ] || [ -f "docs/docusaurus.config.js" ] || [ -f "docs/mkdocs.yml" ]; then
            echo "found=true" >> $GITHUB_OUTPUT
            
            # Detect documentation framework
            if [ -f "docs/docusaurus.config.js" ]; then
              echo "framework=docusaurus" >> $GITHUB_OUTPUT
            elif [ -f "docs/mkdocs.yml" ]; then
              echo "framework=mkdocs" >> $GITHUB_OUTPUT
            else
              echo "framework=custom" >> $GITHUB_OUTPUT
            fi
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Build Docusaurus site
        if: steps.docs_check.outputs.found == 'true' && steps.docs_check.outputs.framework == 'docusaurus'
        run: |
          cd docs
          npm install
          npm run build

      - name: Build MkDocs site
        if: steps.docs_check.outputs.found == 'true' && steps.docs_check.outputs.framework == 'mkdocs'
        run: |
          pip install mkdocs mkdocs-material
          cd docs
          mkdocs build

      - name: Create simple docs site
        if: steps.docs_check.outputs.found == 'false'
        run: |
          mkdir -p docs-site
          
          # Create a simple HTML page
          cat > docs-site/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Mocha Stats Library Documentation</title>
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 40px; }
                  .container { max-width: 800px; margin: 0 auto; }
                  h1 { color: #333; border-bottom: 2px solid #eee; padding-bottom: 10px; }
                  .section { margin: 30px 0; }
                  a { color: #0066cc; text-decoration: none; }
                  a:hover { text-decoration: underline; }
                  .api-link { display: inline-block; padding: 10px 20px; background: #0066cc; color: white; border-radius: 5px; margin: 10px 0; }
                  .api-link:hover { background: #0052a3; color: white; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>Mocha Stats Library Documentation</h1>
                  
                  <div class="section">
                      <h2>Getting Started</h2>
                      <p>Welcome to the Mocha Stats Library documentation. This library provides Discord bot statistics tracking and management.</p>
                  </div>
                  
                  <div class="section">
                      <h2>API Documentation</h2>
                      <a href="api/" class="api-link">View API Documentation</a>
                  </div>
                  
                  <div class="section">
                      <h2>Examples</h2>
                      <p>Check out the <a href="https://github.com/your-repo/tree/main/examples">examples directory</a> for usage examples.</p>
                  </div>
              </div>
          </body>
          </html>
          EOF
          
          # Copy API docs
          cp -r docs/api docs-site/ 2>/dev/null || true

      - name: Upload documentation site
        uses: actions/upload-artifact@v4
        with:
          name: documentation-site
          path: docs-site/
          retention-days: 30

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [build-docs]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download documentation site
        uses: actions/download-artifact@v4
        with:
          name: documentation-site
          path: docs-site/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs-site/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  docs-summary:
    name: Documentation Summary
    runs-on: ubuntu-latest
    needs: [lint-docs, generate-api-docs, build-docs]
    if: always()
    steps:
      - name: Documentation Summary
        run: |
          echo "## 📚 Documentation Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.lint-docs.result }}" = "success" ]; then
            echo "✅ **Markdown Linting**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Markdown Linting**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.generate-api-docs.result }}" = "success" ]; then
            echo "✅ **API Documentation**: Generated" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **API Documentation**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.build-docs.result }}" = "success" ]; then
            echo "✅ **Documentation Site**: Built" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Documentation Site**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ github.ref }}" = "refs/heads/main" ] && [ "${{ github.event_name }}" = "push" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🚀 Documentation will be deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
          fi
